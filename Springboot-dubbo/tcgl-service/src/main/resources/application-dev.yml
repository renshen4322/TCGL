server:
  port: 8084
dubbo:
  provider:
    timeout: 60000
    retries: 0
  application:
    name: dubbo-provider
  protocol:
    name: dubbo
    port: 20882
  registry:
    protocol: dubbo-provider-registry
    address: zookeeper://192.168.146.129:2181
    timeout: 60000
#  monitor:
#    protocol: registry
  config-center:
    timeout: 60000

spring:
  devtools:
    livereload:
      port: 35979
      enabled: true
  datasource:
    name: tcgl  #数据库名称
    url: jdbc:mysql://192.168.146.129:3306/tcgl?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai #url
    username: root  #用户名
    password: gu425006  #用户密码
    driver-class-name: com.mysql.cj.jdbc.Driver  #Mysql驱动
    druid:
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select '1'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20

# mybatis-plus相关配置
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:**/*Mapper.xml
  # 以下配置均有默认值,可以不设置
  global-config:
    db-config:
#      全局默认主键类型
      id-type: auto
#      表名前缀
      tablePrefix: t_
#      表名是否使用驼峰转下划线命名,只对表名生效
      tableUnderline: true
#      大写命名，对字段名和表名均生效默认false
      capitalMode: false
#     全局的entity的逻辑删除字段属性名,(逻辑删除下有效）
      logicDeleteField: delete_status
#      逻辑已删除值,(逻辑删除下有效）
      logicDeleteValue: 1
#      逻辑未删除值,(逻辑删除下有效）
      logicNotDeleteValue: 0
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
#    开启Mybatis二级缓存，默认为 true。
    cache-enabled: false
#  MyBatis 自动映射策略，通过该配置可指定 MyBatis 是否并且如何来自动映射数据表字段与对象的属性，总共有 3 种可选值：
#  AutoMappingBehavior.NONE：不启用自动映射
#  AutoMappingBehavior.PARTIAL：只对非嵌套的 resultMap 进行自动映射
#  AutoMappingBehavior.FULL：对所有的 resultMap 都进行自动映射
    autoMappingBehavior: full
#    指定当结果集中值为 null 的时候是否调用映射对象的 Setter（Map 对象时为 put）方法，通常运用于有 Map.keySet() 依赖或 null 值初始化的情况。
#    通俗的讲，即 MyBatis 在使用 resultMap 来映射查询结果中的列，如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段，这就导致在调用到该字段的时候由于没有映射，取不到而报空指针异常。
    callSettersOnNulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 解决oracle更新数据为null时无法转换报错，mysql不会出现此情况
    jdbc-type-for-null: 'null'
logging:
  config: classpath:log4j2.xml



